#!/usr/bin/env python
# -*- coding: iso-8859-1 -*-
import os
import sys

LIB_PATH = os.path.split(os.getcwd())[0]
sys.path.append(LIB_PATH)

from config.conf_common import CONFIG_COMMON
from config.conf_bns import CONFIG_BNS
from config.conf_etcd import  CONFIG_ETCD
from config.conf_collector import  CONFIG_COLLECTOR
from monitor.monitor import Monitor

import logging
import logging.config

if __name__ == '__main__':

    log_conf = CONFIG_COMMON['log_conf']
    logging.config.fileConfig(log_conf)
    logger = logging.getLogger("mondir")
    #TODO: auto create log dir
    monitor_thrs = []

    try:
        monitor_for_bns = Monitor(logger, CONFIG_BNS)
        monitor_for_bns.setDaemon(True)
        monitor_for_bns.start()

        monitor_for_etcd = Monitor(logger, CONFIG_ETCD)
        monitor_for_etcd.setDaemon(True)
        monitor_for_etcd.start()

        monitor_for_collector = Monitor(logger, CONFIG_COLLECTOR)
        monitor_for_collector.setDaemon(True)
        monitor_for_collector.start()

        monitor_thrs = [monitor_for_etcd, monitor_for_bns, monitor_for_collector]

        while 1 :
            alive = False
            for idx in xrange(len(monitor_thrs)):
                alive = alive or monitor_thrs[idx].isAlive()
            if not alive:
                break

    except KeyboardInterrupt:
        print 'Caught interput signal, exit...'
        sys.exit(0)
    except Exception, err:
        print 'Caught unexpected exceptions <{}>'.format(err)
        sys.exit(1)

    
